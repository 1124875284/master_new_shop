<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzq.mappers.CryptPasswordMapper" >
  <resultMap id="BaseResultMap" type="com.hzq.domain.CryptPassword" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="crypt_password" property="cryptPassword" jdbcType="VARCHAR" />
    <result column="crypt_mode" property="cryptMode" jdbcType="VARCHAR" />
    <result column="crypt_salt" property="cryptSalt" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, crypt_password, crypt_mode, crypt_salt, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_crypt_password
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_crypt_password
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hzq.domain.CryptPassword" >
    insert into tb_crypt_password (id, crypt_password, crypt_mode, 
      crypt_salt, user_id)
    values (#{id,jdbcType=INTEGER}, #{cryptPassword,jdbcType=VARCHAR}, #{cryptMode,jdbcType=VARCHAR}, 
      #{cryptSalt,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hzq.domain.CryptPassword" >
    insert into tb_crypt_password
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cryptPassword != null" >
        crypt_password,
      </if>
      <if test="cryptMode != null" >
        crypt_mode,
      </if>
      <if test="cryptSalt != null" >
        crypt_salt,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cryptPassword != null" >
        #{cryptPassword,jdbcType=VARCHAR},
      </if>
      <if test="cryptMode != null" >
        #{cryptMode,jdbcType=VARCHAR},
      </if>
      <if test="cryptSalt != null" >
        #{cryptSalt,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzq.domain.CryptPassword" >
    update tb_crypt_password
    <set >
      <if test="cryptPassword != null" >
        crypt_password = #{cryptPassword,jdbcType=VARCHAR},
      </if>
      <if test="cryptMode != null" >
        crypt_mode = #{cryptMode,jdbcType=VARCHAR},
      </if>
      <if test="cryptSalt != null" >
        crypt_salt = #{cryptSalt,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzq.domain.CryptPassword" >
    update tb_crypt_password
    set crypt_password = #{cryptPassword,jdbcType=VARCHAR},
      crypt_mode = #{cryptMode,jdbcType=VARCHAR},
      crypt_salt = #{cryptSalt,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_crypt_password
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
</mapper>